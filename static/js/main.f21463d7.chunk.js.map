{"version":3,"sources":["Menubar.js","Cell.js","GameModule.js","MainPane.js","PlayerPane.js","ModalBox.js","VsPlayer.js","VsComputer.js","App.js","serviceWorker.js","index.js"],"names":["Menubar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reloadVsPlayer","window","location","assign","reload","reloadVsComputer","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","React","Component","playerColor","bgColor","Cell","boxStyle","width","height","padding","border","background","bgStatus","circleStyle","WebkitBorderRadius","MozBorderRadius","borderRadius","status","margin","style","clickedBlankCell","clickPos","mapData","currData","playerTurn","numCol","filter","data","row","length","x","y","infectNextCells","clearBgStatus","col","clickedBlueCell","markNextCells","oneNext","findOneNextCell","map","findIndex","e","numRow","twoNext","pos","nextCells","push","Math","min","max","findTwoNextCell","countCells","p1","p2","processGameData","clickedRedCell","md","pt","ct","playComputerTurn","cells","deepClone","simulationResult","cloneMapData","cell","count","diff","maxDiff","apply","rst","maxSimulationResult","randomIndex","floor","random","obj","JSON","parse","stringify","MainPane","mapSize","createPlayMap","isPlayed","createRow","dataRow","items","i","key","src_Cell","createMap","rows","onMainPaneClick","event","mainPanePos","document","getElementsByClassName","getBoundingClientRect","xPos","clientY","yPos","clientX","prevplayerTurn","gameEnd","processClickInput","mapDataArr","j","_this2","processInputPosition","_this3","updateCellCount","playmode","milliseconds","Promise","resolve","setTimeout","then","PlayerPane","playerid","Jumbotron","fontSize","ModalBox","modal","prevState","gameResult","countP1","countP2","Modal","ModalHeader","ModalBody","ModalFooter","Button","VsPlayer","playMode","gameStatus","isGameEnded","winner","updateCountState","Container","Row","Col","xs","src_PlayerPane","src_MainPane","src_ModalBox","VsComputer","App","marginBottom","Menubar_Menubar","updatePlayMode","updatePlayModeState","react_router_dom","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wYAcqBA,cACpB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAaPQ,eAAiB,WAChBC,OAAOC,SAASC,OAAO,gBACvBF,OAAOC,SAASE,UAhBEX,EAmBnBY,iBAAmB,WAClBJ,OAAOC,SAASC,OAAO,kBACvBF,OAAOC,SAASE,UAlBhBX,EAAKa,OAASb,EAAKa,OAAOC,KAAZb,OAAAc,EAAA,EAAAd,CAAAD,IACdA,EAAKgB,MAAQ,CACZC,QAAQ,GALSjB,wEASlBG,KAAKe,SAAS,CACbD,QAASd,KAAKa,MAAMC,0CAerB,OACAE,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,MACnCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAaC,KAAK,iBAAlB,eACAR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAeC,QAAS1B,KAAKU,SAC7BM,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUb,OAAQd,KAAKa,MAAMC,OAAQc,QAAM,GAC1CZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,GAC/BZ,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACCf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,gBAAd,aAEDR,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACCf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,+CAAd,WAEDR,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GACjCnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,GAAzB,WAGArB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAcC,OAAK,GACnBvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAcd,QAAS1B,KAAKI,gBAA5B,UAGAY,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAcd,QAAS1B,KAAKS,kBAA5B,uBA/CgCgC,IAAMC,2BCZrCC,EAAc,CAAC,QAAS,MAAO,QAC/BC,EAAU,CAAC,QAAS,UAAW,UAAW,WAgCjCC,mLA1BP,IAAIC,EAAW,CACXC,MAAO,OACPC,OAAQ,OACRC,QAAS,KACTC,OAAQ,oBACRC,WAAYP,EAAQ5C,KAAKJ,MAAMwD,WAG/BC,EAAc,CACdN,MAAO,OACPC,OAAQ,OACRM,mBAAoB,OACpBC,gBAAiB,OACjBC,aAAc,OACdL,WAAYR,EAAY3C,KAAKJ,MAAM6D,QACnCC,OAAQ,UAGZ,OACI1C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OAAO6B,MAAOb,GACD,IAAtB9C,KAAKJ,MAAM6D,OAAezC,EAAAC,EAAAC,cAAA,OAAKyC,MAAON,IAAsB,WAxB3DZ,IAAMC,WCLzB,SAASkB,EAAiBC,EAAUC,EAASC,EAAUC,GACtD,IAAIC,EAASH,EAAQI,OAAO,SAAAC,GAAI,OAAiB,IAAbA,EAAKC,MAAWC,OAGpD,OAFgBP,EAASD,EAASS,EAAIL,EAASJ,EAASU,GAEvCnB,UAChB,KAAK,EAEJ,MACD,KAAK,EACJU,EAASD,EAASS,EAAIL,EAASJ,EAASU,GAAId,OAASM,EAASN,OAC9De,EAAgBX,EAAUC,EAASC,GACnCC,EAA6B,IAAfA,EAAoB,EAAI,EACtCS,EAAcX,GACd,MACD,KAAK,EACJA,EAASD,EAASS,EAAIL,EAASJ,EAASU,GAAId,OAASM,EAASN,OAC9De,EAAgBX,EAAUC,EAASC,GACnCD,EAASC,EAASK,IAAMH,EAASF,EAASW,KAAMjB,OAAS,EACzDO,EAA6B,IAAfA,EAAoB,EAAI,EACtCS,EAAcX,GAIhB,OAAOE,EAQR,SAASW,EAAgBd,EAAUC,GAElC,OADAW,EAAcX,GACPc,EAAcf,EAAUC,GAGhC,SAASU,EAAgBX,EAAUC,EAASC,GAC3C,IAEIc,EAAUC,EAAgBjB,EAFjBC,EAAQI,OAAO,SAAAC,GAAI,OAAiB,IAAbA,EAAKO,MAAWL,OACvCP,EAAQI,OAAO,SAAAC,GAAI,OAAiB,IAAbA,EAAKC,MAAWC,QAGpDP,EAAQiB,IAAI,SAASZ,GAIpB,OAHyE,IAArEU,EAAQG,UAAU,SAAAC,GAAC,OAAMA,EAAEX,IAAMH,EAAKC,KAAOa,EAAEV,IAAMJ,EAAKO,OAAgC,IAAhBP,EAAKV,SAClFU,EAAKV,OAASM,EAASN,QAEjBU,IAIT,SAASM,EAAcX,GACtBA,EAAQiB,IAAI,SAASZ,GAEpB,OADAA,EAAKf,SAAW,EACTe,IAIT,SAASS,EAAcf,EAAUC,GAChC,IAAIoB,EAASpB,EAAQI,OAAO,SAAAC,GAAI,OAAiB,IAAbA,EAAKO,MAAWL,OAChDJ,EAASH,EAAQI,OAAO,SAAAC,GAAI,OAAiB,IAAbA,EAAKC,MAAWC,OAChDQ,EAAUC,EAAgBjB,EAAUqB,EAAQjB,GAC5CkB,EAiFL,SAAyBC,EAAKF,EAAQjB,GACrC,IAAIoB,EAAY,GAmBhB,OAlBAA,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAM,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KAExGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAM,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAM,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KAExGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAM,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACjGoB,EArGOK,CAAgB7B,EAAUqB,EAAQjB,GAEhDH,EAAQiB,IAAI,SAASZ,GAIpB,OAHIN,EAASS,IAAMH,EAAKC,KAAOP,EAASU,IAAMJ,EAAKO,MAAOP,EAAKf,SAAW,IACD,IAArE+B,EAAQH,UAAU,SAAAC,GAAC,OAAMA,EAAEX,IAAMH,EAAKC,KAAOa,EAAEV,IAAMJ,EAAKO,OAAgC,IAAhBP,EAAKV,SAAgBU,EAAKf,SAAW,IAC1C,IAArEyB,EAAQG,UAAU,SAAAC,GAAC,OAAMA,EAAEX,IAAMH,EAAKC,KAAOa,EAAEV,IAAMJ,EAAKO,OAAgC,IAAhBP,EAAKV,SAAgBU,EAAKf,SAAW,GAC5Ge,IAIT,SAASwB,EAAW7B,GAGnB,MAAO,CAAE8B,GAFA9B,EAAQI,OAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKV,SAAcY,OAElCwB,GADR/B,EAAQI,OAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKV,SAAcY,QAIrC,SAASyB,EAAgBjC,EAAUC,EAASC,EAAUC,GACpE,IAAIC,EAASH,EAAQI,OAAO,SAAAC,GAAI,OAAiB,IAAbA,EAAKC,MAAWC,OAGpD,OAFgBP,EAASD,EAASS,EAAIL,EAASJ,EAASU,GAEvCd,QAChB,KAAK,EACJO,EAAaJ,EAAiBC,EAAUC,EAASC,EAAUC,GAC3D,MACD,KAAK,EACe,IAAfA,GA3DP,SAAwBH,EAAUC,GACjCW,EAAcX,GACPc,EAAcf,EAAUC,GAyDPiC,CAAelC,EAAUC,GAC/C,MACD,QACoB,IAAfE,GAAkBW,EAAgBd,EAAUC,GAIlD,MAAO,CAAEkC,GAAIlC,EAASmC,GAAIjC,EAAYkC,GAD1BP,EAAW7B,IAIjB,SAASqC,EAAiBrC,EAASE,GACzC,IAAIoC,EAAQC,EAAUvC,EAAQI,OAAO,SAAAC,GAAI,OAAIA,EAAKV,SAAWO,KACzDsC,EAAmB,GAEvBF,EAAMrB,IAAI,SAASZ,GAElB,IAAIoC,EAAeF,EAAUvC,GAC7Ba,EAAgB,CAAEL,EAAGH,EAAKC,IAAKG,EAAGJ,EAAKO,KAAO6B,GAC9C,IAAIlB,EAAYgB,EAAUE,EAAarC,OAAO,SAAAe,GAAC,OAAmB,IAAfA,EAAE7B,UAAiC,IAAf6B,EAAE7B,YAWzE,OAVGiC,GACFA,EAAUN,IAAI,SAASyB,GACtBD,EAAeF,EAAUvC,GACzBa,EAAgB,CAAEL,EAAGH,EAAKC,IAAKG,EAAGJ,EAAKO,KAAO6B,GAC9C3C,EAAiB,CAAEU,EAAGkC,EAAKpC,IAAKG,EAAGiC,EAAK9B,KAAO6B,EAAcpC,EAAMH,GACnE,IAAIyC,EAAQd,EAAWY,GAEvB,OADAD,EAAiBhB,KAAK,CAAExB,QAASyC,EAAcL,GAAIO,EAAOC,KAAMD,EAAMZ,GAAKY,EAAMb,KAC1EY,IAGFrC,IAGR,IAmDqBsB,EAnDjBkB,EAAUpB,KAAKE,IAAImB,MAAMrB,KAAMe,EAAiBvB,IAAI,SAAS8B,GAAO,OAAOA,EAAIH,QAC/EI,EAAsBR,EAAiBpC,OAAO,SAAA2C,GAAG,OAAIA,EAAIH,OAASC,IAClEI,GAiDiBtB,EAjDUqB,EAAoBzC,OAkD5CkB,KAAKyB,MAAMzB,KAAK0B,SAAW1B,KAAKyB,MAAMvB,KAhD7C,MAAO,CACNO,GAAIc,EAAsBA,EAAoBC,GAAajD,QAAUA,EACrEmC,GAAoB,IAAfjC,EAAoB,EAAI,EAC7BkC,GAAIY,EAAsBA,EAAoBC,GAAab,GAAKP,EAAW7B,IAI7E,SAASgB,EAAgBM,EAAKF,EAAQjB,GACrC,IAAIoB,EAAY,GAShB,OARAA,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAM,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAM,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAM,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAM,GAAGN,EAAO,KACxGoB,EAAUC,KAAK,CAAEhB,EAAGiB,KAAKC,IAAID,KAAKE,IAAIL,EAAId,EAAG,EAAG,GAAGY,EAAO,GAAKX,EAAGgB,KAAKC,IAAID,KAAKE,IAAIL,EAAIb,EAAG,EAAG,GAAGN,EAAO,KACjGoB,EA0BR,SAASgB,EAAUa,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IChKlC,IAyGeI,6MAnGdzG,MAAQ,CACP0G,QAAS,CAAErC,OAAQ,EAAGjB,OAAQ,GAC9BH,QAASjE,EAAK2H,cAAc,EAAG,GAC/BxD,WAAY,EACZD,SAAU,GACV0C,MAAO,GACPgB,UAAU,KAwBXC,UAAY,SAACxC,EAAQjB,GAGpB,IAFA,IAAI0D,EAAW9H,EAAKgB,MAAMiD,QAASI,OAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAQc,IAC3D0C,EAAQ,GACHC,EAAI,EAAGA,EAAI5D,EAAQ4D,IAC3BD,EAAMtC,KAAKtE,EAAAC,EAAAC,cAAA,MAAI4G,IAAKD,GAAG7G,EAAAC,EAAAC,cAAC6G,EAAD,CAAMtE,OAAQkE,EAAQE,GAAGpE,OAAQL,SAAUuE,EAAQE,GAAGzE,aAE9E,OAAOpC,EAAAC,EAAAC,cAAA,MAAI4G,IAAK5C,GAAS0C,MAG1BI,UAAY,SAAC9C,EAAQjB,GAEpB,IADA,IAAIgE,EAAO,GACFJ,EAAI,EAAGA,EAAI3C,EAAQ2C,IAC3BI,EAAK3C,KAAKzF,EAAK6H,UAAUG,EAAG5D,IAE7B,OAAQjD,EAAAC,EAAAC,cAAA,SAAOY,UAAU,WAAWJ,QAAS7B,EAAKqI,gBAAiBvE,MAAO,CAACD,OAAQ,WAChF1C,EAAAC,EAAAC,cAAA,aAAQ+G,OAIZC,gBAAkB,SAACC,GAClB,IAAIC,EAAcC,SAASC,uBAAuB,YAAY,GAAGC,wBACvDC,EAAOjD,KAAKyB,OAAOmB,EAAMM,QAAQL,EAAY7D,IAAI6D,EAAYpF,OAAOnD,EAAKgB,MAAM0G,QAAQrC,SAC7FwD,EAAOnD,KAAKyB,OAAOmB,EAAMQ,QAAQP,EAAY9D,IAAI8D,EAAYrF,MAAMlD,EAAKgB,MAAM0G,QAAQtD,SACtF2E,EAAiB/I,EAAKgB,MAAMmD,WAC3BnE,EAAKD,MAAMiJ,SAAShJ,EAAKiJ,kBAAkBN,EAAME,EAAME,iFA7C/C1D,EAAQjB,GAErB,IADA,IAAI8E,EAAa,GACTlB,EAAE,EAAEA,EAAE3C,EAAO2C,IACpB,IAAI,IAAImB,EAAE,EAAEA,EAAE/E,EAAO+E,IACpBD,EAAWzD,KAAK,CACflB,IAAKyD,EACLnD,IAAKsE,EACLvF,OAAQ,EACRL,SAAU,IAUb,OALA2F,EAAW,GAAGtF,OAAS,EACvBsF,EAAW9E,EAAO,GAAGR,OAAS,EAC9BsF,EAAW7D,EAAOjB,EAAOA,GAAQR,OAAS,EAC1CsF,EAAW7D,EAAOjB,EAAO,GAAGR,OAAS,EAE9BsF,4CA8BWP,EAAME,EAAME,GAAgB,IAAAK,EAAAjJ,KAC1CA,KAAKa,MAAMiD,QAAQ0E,EAAKxI,KAAKa,MAAM0G,QAAQtD,OAAOyE,GAAMjF,SAAWzD,KAAKa,MAAMmD,WACjFhE,KAAKe,SAAS,CACbgD,SAAU/D,KAAKa,MAAMiD,QAAQ0E,EAAKxI,KAAKa,MAAM0G,QAAQtD,OAAOyE,IAC1D,WACFO,EAAKC,qBAAqBV,EAAME,EAAME,KAGvC5I,KAAKkJ,qBAAqBV,EAAME,EAAME,gDAInBJ,EAAME,EAAME,GAAgB,IAAAO,EAAAnJ,KAC5C6G,EAAMf,EAAgB,CAAExB,EAAGkE,EAAMjE,EAAGmE,GAAQ1I,KAAKa,MAAMiD,QAAS9D,KAAKa,MAAMkD,SAAU/D,KAAKa,MAAMmD,YACpGhE,KAAKe,SAAS,CACb+C,QAAS+C,EAAIb,GACbhC,WAAY6C,EAAIZ,GAChBQ,MAAOI,EAAIX,GACXuB,SAAUmB,IAAmB/B,EAAIZ,IAC/B,WAEF,GADAkD,EAAKvJ,MAAMwJ,gBAAgBD,EAAKtI,MAAM4F,OACV,IAAxB0C,EAAKvJ,MAAMyJ,UAAkBF,EAAKtI,MAAM4G,UAAsC,IAA1B0B,EAAKtI,MAAMmD,YAA4C,IAAxBmF,EAAKtI,MAAM4F,MAAMZ,GAAU,CACjH,IAAIgB,EAAMV,EAAiBgD,EAAKtI,MAAMiD,QAASqF,EAAKtI,MAAMmD,aArF/CsF,EAsFL,IArFF,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAqFpCI,KAAK,WACfP,EAAKpI,SAAS,CACb+C,QAAS+C,EAAIb,GACbhC,WAAY6C,EAAIZ,GAChBQ,MAAOI,EAAIX,GACXuB,SAAUmB,IAAmB/B,EAAIZ,IAC/B,WAAQkD,EAAKvJ,MAAMwJ,gBAAgBD,EAAKtI,MAAM4F,WA5FxC,IAAC6C,qCAmGP,OAAOtI,EAAAC,EAAAC,cAAA,WACZlB,KAAKgI,UAAUhI,KAAKa,MAAM0G,QAAQrC,OAAOlF,KAAKa,MAAM0G,QAAQtD,gBAhGxCxB,IAAMC,mBCwBdiH,mLA3Bb,IAIItG,EAAc,CACRN,MAAO,OACPC,OAAQ,OACRM,mBAAoB,OACpBC,gBAAiB,OACjBC,aAAc,OACdL,WAAkC,IAAtBnD,KAAKJ,MAAM6D,OAAe,MAAQ,OAC9CC,OAAQ,UAGZ,OAAO1C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cAAc6B,MAd9B,CACFT,OAAQ,sBAcjBlC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yDACdd,EAAAC,EAAAC,cAAA,UAAKlB,KAAKJ,MAAMgK,SAAS5I,EAAAC,EAAAC,cAAA,OAAKyC,MAAON,MAEtCrC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QACdd,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAW/H,UAAU,0DACpBd,EAAAC,EAAAC,cAAA,KAAGyC,MAAO,CAACmG,SAAS,SAAU9J,KAAKJ,MAAM6G,iBAvBrBhE,IAAMC,mDC4DhBqH,cA3Dd,SAAAA,EAAYnK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+J,IAClBlK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiK,GAAA5J,KAAAH,KAAMJ,KAcPQ,eAAiB,WAChBC,OAAOC,SAASC,OAAO,gBACvBF,OAAOC,SAASE,UAjBEX,EAoBnBY,iBAAmB,WAClBJ,OAAOC,SAASC,OAAO,kBACvBF,OAAOC,SAASE,UApBhBX,EAAKgB,MAAQ,CACbmJ,OAAO,GAGPnK,EAAKa,OAASb,EAAKa,OAAOC,KAAZb,OAAAc,EAAA,EAAAd,CAAAD,IANIA,wEAUlBG,KAAKe,SAAS,SAAAkJ,GAAS,MAAK,CAC5BD,OAAQC,EAAUD,0CAelB,IAAIE,EAAqC,IAAxBlK,KAAKJ,MAAMyJ,SAC1BrI,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,qBAAalB,KAAKJ,MAAMuK,SACxBnJ,EAAAC,EAAAC,cAAA,qBAAalB,KAAKJ,MAAMwK,UAEzBpJ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,oBAAYlB,KAAKJ,MAAMuK,SACvBnJ,EAAAC,EAAAC,cAAA,sBAAclB,KAAKJ,MAAMwK,UAE5B,OACApJ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAOvJ,OAAQd,KAAKJ,MAAMkB,OAAQJ,OAAQV,KAAKU,OAAQoB,UAAW9B,KAAKJ,MAAMkC,WAC5Ed,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,KAC2B,IAAxBtK,KAAKJ,MAAMyJ,SACZrJ,KAAKJ,MAAMuK,QAAUnK,KAAKJ,MAAMwK,QAAU,eAAiB,eAC3DpK,KAAKJ,MAAMuK,QAAUnK,KAAKJ,MAAMwK,QAAU,cAAiB,iBAG7DpJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,KACEL,GAEFlJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,KAC2B,IAAxBxK,KAAKJ,MAAMyJ,SACZrI,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAQrJ,MAAM,UAAUM,QAAS1B,KAAKI,gBAAtC,MACAY,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAQrJ,MAAM,UAAUM,QAAS1B,KAAKS,kBAAtC,gBAnDiBgC,IAAMC,WC8CdgI,6MAzCd7J,MAAQ,CACP4F,MAAO,CACNb,GAAI,EACJC,GAAI,GAEL8E,SAAU,EACVC,WAAY,CACXC,aAAa,EACbC,OAAQ,SAIVC,iBAAmB,SAAC7E,GACnBrG,EAAKkB,SAAS,CACb0F,MAAOP,GACL,WACFrG,EAAKkB,SAAS,CACb6J,WAAY,CAAEC,YAAqC,IAAxBhL,EAAKgB,MAAM4F,MAAMb,IAAoC,IAAxB/F,EAAKgB,MAAM4F,MAAMZ,IAAYhG,EAAKgB,MAAM4F,MAAMb,GAAK/F,EAAKgB,MAAM4F,MAAMZ,KAAO,GACnIiF,OAAQjL,EAAKgB,MAAM4F,MAAMb,GAAK/F,EAAKgB,MAAM4F,MAAMZ,GAAK,EAAI,gFAMpD,OACL7E,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,KACChK,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,KACCjK,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAKC,GAAG,KAAInK,EAAAC,EAAAC,cAACkK,EAAD,CAAYxB,SAAkC,IAAxB5J,KAAKa,MAAM8J,SAAiB,UAAY,SAAUlH,OAAQ,EAAGgD,MAAOzG,KAAKa,MAAM4F,MAAMb,MACvH5E,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAKC,GAAG,KACPnK,EAAAC,EAAAC,cAACmK,EAAD,CAAUjC,gBAAiBpJ,KAAK+K,iBAAkB1B,SAAUrJ,KAAKa,MAAM8J,SAAU9B,QAAS7I,KAAKa,MAAM+J,WAAWC,eAEjH7J,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAKC,GAAG,KAAInK,EAAAC,EAAAC,cAACkK,EAAD,CAAYxB,SAAkC,IAAxB5J,KAAKa,MAAM8J,SAAiB,UAAY,WAAYlH,OAAQ,EAAGgD,MAAOzG,KAAKa,MAAM4F,MAAMZ,QAG3H7E,EAAAC,EAAAC,cAACoK,EAAD,CAAUxK,OAAQd,KAAKa,MAAM+J,WAAWC,YAAaxB,SAAUrJ,KAAKa,MAAM8J,SAAUR,QAASnK,KAAKa,MAAM4F,MAAMb,GAAIwE,QAASpK,KAAKa,MAAM4F,MAAMZ,aArCzHpD,IAAMC,WC2Cd6I,6MAzCd1K,MAAQ,CACP4F,MAAO,CACNb,GAAI,EACJC,GAAI,GAEL8E,SAAU,EACVC,WAAY,CACXC,aAAa,EACbC,OAAQ,SAIVC,iBAAmB,SAAC7E,GACnBrG,EAAKkB,SAAS,CACb0F,MAAOP,GACL,WACFrG,EAAKkB,SAAS,CACb6J,WAAY,CAAEC,YAAqC,IAAxBhL,EAAKgB,MAAM4F,MAAMb,IAAoC,IAAxB/F,EAAKgB,MAAM4F,MAAMZ,IAAYhG,EAAKgB,MAAM4F,MAAMb,GAAK/F,EAAKgB,MAAM4F,MAAMZ,KAAO,GACnIiF,OAAQjL,EAAKgB,MAAM4F,MAAMb,GAAK/F,EAAKgB,MAAM4F,MAAMZ,GAAK,EAAI,gFAMpD,OACL7E,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,KACChK,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,KACCjK,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAKC,GAAG,KAAInK,EAAAC,EAAAC,cAACkK,EAAD,CAAYxB,SAAkC,IAAxB5J,KAAKa,MAAM8J,SAAiB,UAAY,SAAUlH,OAAQ,EAAGgD,MAAOzG,KAAKa,MAAM4F,MAAMb,MACvH5E,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAKC,GAAG,KACPnK,EAAAC,EAAAC,cAACmK,EAAD,CAAUjC,gBAAiBpJ,KAAK+K,iBAAkB1B,SAAUrJ,KAAKa,MAAM8J,SAAU9B,QAAS7I,KAAKa,MAAM+J,WAAWC,eAEjH7J,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAKC,GAAG,KAAInK,EAAAC,EAAAC,cAACkK,EAAD,CAAYxB,SAAkC,IAAxB5J,KAAKa,MAAM8J,SAAiB,UAAY,WAAYlH,OAAQ,EAAGgD,MAAOzG,KAAKa,MAAM4F,MAAMZ,QAG3H7E,EAAAC,EAAAC,cAACoK,EAAD,CAAUxK,OAAQd,KAAKa,MAAM+J,WAAWC,YAAaxB,SAAUrJ,KAAKa,MAAM8J,SAAUR,QAASnK,KAAKa,MAAM4F,MAAMb,GAAIwE,QAASpK,KAAKa,MAAM4F,MAAMZ,aArCvHpD,IAAMC,WCsChB8I,oLAlBP,OACLxK,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAWrH,MAAO,CAAC8H,aAAc,SAChCzK,EAAAC,EAAAC,cAACwK,EAAD,CAASC,eAAgB3L,KAAK4L,uBAE/B5K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,KACC7K,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC1J,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWvB,IACnC1J,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAWV,cA1BzB9I,IAAMC,WCGJwJ,QACW,cAA7B7L,OAAOC,SAAS6L,UAEe,UAA7B9L,OAAOC,SAAS6L,UAEhB9L,OAAOC,SAAS6L,SAASC,MACvB,2DCXNC,IAASC,OAAOtL,EAAAC,EAAAC,cAACqL,GAAD,MAASlE,SAASmE,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjD,KAAK,SAAAkD,GACjCA,EAAaC","file":"static/js/main.f21463d7.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nexport default class Menubar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.toggle = this.toggle.bind(this);\n\t\tthis.state = {\n\t\t\tisOpen: false\n\t\t};\n\t}\n\ttoggle() {\n\t\tthis.setState({\n\t\t\tisOpen: !this.state.isOpen\n\t\t});\n\t}\n\n\treloadVsPlayer = () => {\n\t\twindow.location.assign(\"./#/vsplayer\");\n\t\twindow.location.reload();\n\t}\n\n\treloadVsComputer = () => {\n\t\twindow.location.assign(\"./#/vscomputer\");\n\t\twindow.location.reload();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<div>\n\t\t\t<Navbar color=\"light\" light expand=\"md\">\n\t\t\t<NavbarBrand href=\"/germwarfare/\">GermWarfare</NavbarBrand>\n\t\t\t<NavbarToggler onClick={this.toggle} />\n\t\t\t<Collapse isOpen={this.state.isOpen} navbar>\n\t\t\t\t<Nav className=\"ml-auto\" navbar>\n\t\t\t\t<NavItem>\n\t\t\t\t\t<NavLink href=\"/components/\">JohnKang</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t\t<NavItem>\n\t\t\t\t\t<NavLink href=\"https://github.com/SeungsooKang/germwarfare\">GitHub</NavLink>\n\t\t\t\t</NavItem>\n\t\t\t\t<UncontrolledDropdown nav inNavbar>\n\t\t\t\t\t<DropdownToggle nav caret>\n\t\t\t\t\tOptions\n\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t<DropdownMenu right>\n\t\t\t\t\t<DropdownItem onClick={this.reloadVsPlayer}>\n\t\t\t\t\t\tP vs P\n\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t<DropdownItem onClick={this.reloadVsComputer}>\n\t\t\t\t\t\tP vs C\n\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t</UncontrolledDropdown>\n\t\t\t\t</Nav>\n\t\t\t</Collapse>\n\t\t\t</Navbar>\n\t\t</div>\n\t\t);\n\t}\n}","import React from 'react'\n\nconst playerColor = ['white', 'red', 'blue'];\nconst bgColor = ['white', '#f4a688', '#fff2df', '#ffff99'];\n\nclass Cell extends React.Component {\n\n    render() {\n\n        var boxStyle = {\n            width: '60px',\n            height: '60px',\n            padding: '5%',\n            border: '1px solid #c8c3cc',\n            background: bgColor[this.props.bgStatus]\n        };\n    \n        var circleStyle = {\n            width: '50px',\n            height: '50px',\n            WebkitBorderRadius: '25px',\n            MozBorderRadius: '25px',\n            borderRadius: '25px',\n            background: playerColor[this.props.status],\n            margin: '0 auto'\n        };\n\n        return (\n            <div className='cell' style={boxStyle}>\n                { this.props.status !== 0 ? <div style={circleStyle}></div> : '' }\n            </div>\n        );\n    }\n}\n\nexport default Cell\n","function clickedBlankCell(clickPos, mapData, currData, playerTurn) {\n\tlet numCol = mapData.filter(data => data.row === 0).length;\n\tlet clickData = mapData[ clickPos.x * numCol + clickPos.y ];\n\n\tswitch(clickData.bgStatus) {\n\t\tcase 0:\n\t\t\t// No event\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tmapData[ clickPos.x * numCol + clickPos.y ].status = currData.status;\n\t\t\tinfectNextCells(clickPos, mapData, currData); \n\t\t\tplayerTurn = (playerTurn === 1) ? 2 : 1;\n\t\t\tclearBgStatus(mapData);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tmapData[ clickPos.x * numCol + clickPos.y ].status = currData.status;\n\t\t\tinfectNextCells(clickPos, mapData, currData); \n\t\t\tmapData[ currData.row * numCol + currData.col ].status = 0;\n\t\t\tplayerTurn = (playerTurn === 1) ? 2 : 1;\n\t\t\tclearBgStatus(mapData);\n\t\t\tbreak;\n\t\tdefault:\n\t}\n\treturn playerTurn;\n}\n\nfunction clickedRedCell(clickPos, mapData) {\n\tclearBgStatus(mapData);\n\treturn markNextCells(clickPos, mapData);\n}\n\nfunction clickedBlueCell(clickPos, mapData) {\n\tclearBgStatus(mapData);\n\treturn markNextCells(clickPos, mapData);\n}\n\nfunction infectNextCells(clickPos, mapData, currData) {\n\tlet numRow = mapData.filter(data => data.col === 0).length;\n\tlet numCol = mapData.filter(data => data.row === 0).length;\n\tlet oneNext = findOneNextCell(clickPos, numRow, numCol);\n\n\tmapData.map(function(data){\n\t\tif (oneNext.findIndex(e => ( e.x === data.row && e.y === data.col ))!== -1 && data.status !== 0) {\n\t\t\tdata.status = currData.status \n\t\t}\n\t\treturn data;\n\t});\n}\n\nfunction clearBgStatus(mapData){\n\tmapData.map(function(data){\n\t\tdata.bgStatus = 0;\n\t\treturn data;\n\t});\n}\n\nfunction markNextCells(clickPos, mapData) {\n\tlet numRow = mapData.filter(data => data.col === 0).length;\n\tlet numCol = mapData.filter(data => data.row === 0).length;\n\tlet oneNext = findOneNextCell(clickPos, numRow, numCol);\n\tlet twoNext = findTwoNextCell(clickPos, numRow, numCol);\n\n\tmapData.map(function(data){\n\t\tif (clickPos.x === data.row && clickPos.y === data.col) { data.bgStatus = 3 }\n\t\tif (twoNext.findIndex(e => ( e.x === data.row && e.y === data.col ))!== -1 && data.status === 0) { data.bgStatus = 2 }\n\t\tif (oneNext.findIndex(e => ( e.x === data.row && e.y === data.col ))!== -1 && data.status === 0) { data.bgStatus = 1 }\n\t\treturn data;\n\t});\n}\n\nfunction countCells(mapData) {\n\tlet c1 = mapData.filter(data => data.status === 1).length;\n\tlet c2 = mapData.filter(data => data.status === 2).length;\n\treturn { p1: c1, p2: c2};\n}\n\nexport default function processGameData(clickPos, mapData, currData, playerTurn) {\n\tlet numCol = mapData.filter(data => data.row === 0).length;\n\tlet clickData = mapData[ clickPos.x * numCol + clickPos.y ];\n\n\tswitch(clickData.status) {\n\t\tcase 0:\n\t\t\tplayerTurn = clickedBlankCell(clickPos, mapData, currData, playerTurn);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tif (playerTurn === 1) clickedRedCell(clickPos, mapData);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (playerTurn === 2) clickedBlueCell(clickPos, mapData)\n\t  }\n\t\n\tlet count = countCells(mapData);\n\treturn { md: mapData, pt: playerTurn, ct: count };\n}\n\nexport function playComputerTurn(mapData, playerTurn) {\n\tlet cells = deepClone(mapData.filter(data => data.status === playerTurn));\n\tlet simulationResult = [];\n\t\n\tcells.map(function(data){\n\t\t// deep clone\n\t\tlet cloneMapData = deepClone(mapData);\n\t\tclickedBlueCell({ x: data.row, y: data.col }, cloneMapData)\n\t\tlet nextCells = deepClone(cloneMapData.filter(e => e.bgStatus === 1 || e.bgStatus === 2));\n\t\tif(nextCells){\n\t\t\tnextCells.map(function(cell){\n\t\t\t\tcloneMapData = deepClone(mapData);\n\t\t\t\tclickedBlueCell({ x: data.row, y: data.col }, cloneMapData)\n\t\t\t\tclickedBlankCell({ x: cell.row, y: cell.col }, cloneMapData, data, playerTurn);\n\t\t\t\tlet count = countCells(cloneMapData);\n\t\t\t\tsimulationResult.push({ mapData: cloneMapData, ct: count, diff: count.p2 - count.p1});\n\t\t\t\treturn cell;\n\t\t\t})\n\t\t}\n\t\treturn data;\n\t});\n\n\tlet maxDiff = Math.max.apply(Math, simulationResult.map(function(rst) { return rst.diff; }));\n\tlet maxSimulationResult = simulationResult.filter(rst => rst.diff === maxDiff);\n\tlet randomIndex = getRandomInt(maxSimulationResult.length);\n\t\n\treturn { \n\t\tmd: maxSimulationResult ? maxSimulationResult[randomIndex].mapData : mapData, \n\t\tpt: (playerTurn === 1) ? 2 : 1, \n\t\tct: maxSimulationResult ? maxSimulationResult[randomIndex].ct : countCells(mapData)\n\t};\n}\n\nfunction findOneNextCell(pos, numRow, numCol){\n\tlet nextCells = [];\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y   , 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x   , 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x   , 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y   , 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\treturn nextCells;\n}\n\nfunction findTwoNextCell(pos, numRow, numCol){\n\tlet nextCells = [];\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y   , 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x   , 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x   , 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y   , 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\treturn nextCells;\n}\n\nfunction deepClone(obj) {\n\treturn JSON.parse(JSON.stringify(obj));\n}\n\nfunction getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}","import React from 'react'\nimport Cell from './Cell'\nimport processGameData from './GameModule'\nimport { playComputerTurn } from './GameModule'\n\nconst sleep = (milliseconds) => {\n\treturn new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nclass MainPane extends React.Component {\n\n\tstate = {\n\t\tmapSize: { numRow: 7, numCol: 7 },\n\t\tmapData: this.createPlayMap(7, 7),\n\t\tplayerTurn: 1,\n\t\tcurrData: {},\n\t\tcount: {},\n\t\tisPlayed: false\n\t}\n\n\tcreatePlayMap(numRow, numCol) {\n\t\tvar mapDataArr = [];\n\t\tfor(var i=0;i<numRow;i++){\n\t\t\tfor(var j=0;j<numCol;j++){\n\t\t\t\tmapDataArr.push({\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: j,\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tbgStatus: 0\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// initial germs\n\t\tmapDataArr[0].status = 1;\n\t\tmapDataArr[numCol-1].status = 2;\n\t\tmapDataArr[numRow*numCol-numCol].status = 2;\n\t\tmapDataArr[numRow*numCol-1].status = 1;\n\n\t\treturn mapDataArr;\n\t} \n\n\tcreateRow = (numRow, numCol) => {\n\t\tvar dataRow = (this.state.mapData).filter(data => data.row === numRow);\n\t\tvar items = [];\n\t\tfor (var i = 0; i < numCol; i++) {\n\t\t\titems.push(<td key={i}><Cell status={dataRow[i].status} bgStatus={dataRow[i].bgStatus} /></td>);\n\t\t}\n\t\treturn <tr key={numRow}>{items}</tr>;\n\t}\n\t\n\tcreateMap = (numRow, numCol) => {\n\t\tvar rows = [];\n\t\tfor (var i = 0; i < numRow; i++) {\n\t\t\trows.push(this.createRow(i, numCol));\n\t\t}\n\t\treturn \t<table className='mainpane' onClick={this.onMainPaneClick} style={{margin: '0 auto'}}>\n\t\t\t\t\t<tbody>{rows}</tbody>\n\t\t\t\t</table>\n\t}\n\n\tonMainPaneClick = (event) => {\n\t\tlet mainPanePos = document.getElementsByClassName('mainpane')[0].getBoundingClientRect();\n        let xPos = Math.floor((event.clientY-mainPanePos.y)/(mainPanePos.height/this.state.mapSize.numRow));\n\t\tlet yPos = Math.floor((event.clientX-mainPanePos.x)/(mainPanePos.width/this.state.mapSize.numCol));\n\t\tlet prevplayerTurn = this.state.playerTurn;\n\t\tif (!this.props.gameEnd) this.processClickInput(xPos, yPos, prevplayerTurn);\n\t}\n\n\tprocessClickInput (xPos, yPos, prevplayerTurn) {\n\t\tif (this.state.mapData[xPos*this.state.mapSize.numCol+yPos].status === this.state.playerTurn) {\n\t\t\tthis.setState({\n\t\t\t\tcurrData: this.state.mapData[xPos*this.state.mapSize.numCol+yPos] \n\t\t\t}, () => {\n\t\t\t\tthis.processInputPosition(xPos, yPos, prevplayerTurn);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.processInputPosition(xPos, yPos, prevplayerTurn);\n\t\t}\n\t}\n\n\tprocessInputPosition(xPos, yPos, prevplayerTurn) {\n\t\tlet rst = processGameData({ x: xPos, y: yPos }, this.state.mapData, this.state.currData, this.state.playerTurn);\n\t\tthis.setState({\n\t\t\tmapData: rst.md,\n\t\t\tplayerTurn: rst.pt,\n\t\t\tcount: rst.ct,\n\t\t\tisPlayed: prevplayerTurn !== rst.pt\n\t\t}, () => {\n\t\t\tthis.props.updateCellCount(this.state.count);\n\t\t\tif (this.props.playmode === 1 && this.state.isPlayed && this.state.playerTurn === 2 && this.state.count.p2 !== 0) {\n\t\t\t\tlet rst = playComputerTurn(this.state.mapData, this.state.playerTurn);\n\t\t\t\tsleep(500).then(() => { \n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmapData: rst.md,\n\t\t\t\t\t\tplayerTurn: rst.pt,\n\t\t\t\t\t\tcount: rst.ct,\n\t\t\t\t\t\tisPlayed: prevplayerTurn !== rst.pt\n\t\t\t\t\t}, () => { this.props.updateCellCount(this.state.count) });\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n    render() {\n        return <div>\n\t\t{this.createMap(this.state.mapSize.numRow,this.state.mapSize.numCol)}\n\t\t</div>\n    }\n}\n\nexport default MainPane\n","import React from 'react'\nimport { Jumbotron } from 'reactstrap';\n\nclass PlayerPane extends React.Component {\n\n    render() {\n\t\tvar style = {\n            border: '1px solid #c8c3cc'\n\t\t};\n\n\t\tvar circleStyle = {\n            width: '50px',\n            height: '50px',\n            WebkitBorderRadius: '25px',\n            MozBorderRadius: '25px',\n            borderRadius: '25px',\n            background: this.props.status === 1 ? 'red' : 'blue',\n            margin: '0 auto'\n        };\n\t\t\n        return <div className=\"w-100 h-100\" style={style}>\n\t\t\t<div className=\"h-50 d-flex justify-content-center align-items-center\">\n\t\t\t\t<h1>{this.props.playerid}<div style={circleStyle}></div></h1>\n\t\t\t</div>\n\t\t\t<div className=\"h-50\">\n\t\t\t\t<Jumbotron className=\"h-100 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t<p style={{fontSize:'90px'}}>{this.props.count}</p>\n\t\t\t\t</Jumbotron>\n\t\t\t</div>\n\t\t</div>\n    }\n}\n\nexport default PlayerPane\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalBox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\tmodal: false\n\t\t};\n\n\t\tthis.toggle = this.toggle.bind(this);\n\t}\n\n\ttoggle() {\n\t\tthis.setState(prevState => ({\n\t\tmodal: !prevState.modal\n\t\t}));\n\t}\n\n\treloadVsPlayer = () => {\n\t\twindow.location.assign(\"./#/vsplayer\");\n\t\twindow.location.reload();\n\t}\n\n\treloadVsComputer = () => {\n\t\twindow.location.assign(\"./#/vscomputer\");\n\t\twindow.location.reload();\n\t}\n\n\trender() {\n\t\tlet gameResult = this.props.playmode === 0 ? \t\n\t\t\t\t<div>\n\t\t\t\t\t<p>Player1: {this.props.countP1}</p>\n\t\t\t\t\t<p>Player2: {this.props.countP2}</p>\n\t\t\t\t</div> :\n\t\t\t\t<div>\n\t\t\t\t\t<p>Player: {this.props.countP1}</p>\n\t\t\t\t\t<p>Computer: {this.props.countP2}</p>\n\t\t\t\t</div>\n\t\treturn (\n\t\t<div>\n\t\t\t<Modal isOpen={this.props.isOpen} toggle={this.toggle} className={this.props.className}>\n\t\t\t\t<ModalHeader>\n\t\t\t\t\t{ this.props.playmode === 0 ? \n\t\t\t\t\t\tthis.props.countP1 > this.props.countP2 ? 'Player1 won!' : 'Player2 won!' :\n\t\t\t\t\t\tthis.props.countP1 > this.props.countP2 ? 'Player won!'  : 'Computer won!' \n\t\t\t\t\t}\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t{gameResult}\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t{ this.props.playmode === 0 ? \n\t\t\t\t\t\t<Button color=\"primary\" onClick={this.reloadVsPlayer}>Ok</Button> :\n\t\t\t\t\t\t<Button color=\"primary\" onClick={this.reloadVsComputer}>Ok</Button>\n\t\t\t\t\t}\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ModalBox;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport MainPane from './MainPane'\nimport PlayerPane from './PlayerPane';\nimport ModalBox from './ModalBox';\n\nclass VsPlayer extends React.Component {\n\n\tstate = {\n\t\tcount: {\n\t\t\tp1: 2,\n\t\t\tp2: 2\n\t\t},\n\t\tplayMode: 0,\t\t// 0: P vs P, 1: P vs C,\n\t\tgameStatus: { \n\t\t\tisGameEnded: false,\n\t\t\twinner: null\n\t\t}\n\t}\n\n\tupdateCountState = (ct) => {\n\t\tthis.setState({\n\t\t\tcount: ct\n\t\t}, () => { \n\t\t\tthis.setState({\n\t\t\t\tgameStatus: { isGameEnded: this.state.count.p1 === 0 || this.state.count.p2 === 0 || this.state.count.p1 + this.state.count.p2 === 49,\n\t\t\t\twinner: this.state.count.p1 > this.state.count.p2 ? 1 : 2 }\n\t\t\t})\n\t\t})\n\t};\n\n    render(){\n        return (\n\t\t\t<div>\n\t\t\t\t<Container> \n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs=\"3\"><PlayerPane playerid={this.state.playMode === 0 ? 'Player1' : 'Player'} status={1} count={this.state.count.p1}/></Col>          \n\t\t\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t\t\t<MainPane updateCellCount={this.updateCountState} playmode={this.state.playMode} gameEnd={this.state.gameStatus.isGameEnded}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs=\"3\"><PlayerPane playerid={this.state.playMode === 0 ? 'Player2' : 'Computer'} status={2} count={this.state.count.p2}/></Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<ModalBox isOpen={this.state.gameStatus.isGameEnded} playmode={this.state.playMode} countP1={this.state.count.p1} countP2={this.state.count.p2}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n  \nexport default VsPlayer;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport MainPane from './MainPane'\nimport PlayerPane from './PlayerPane';\nimport ModalBox from './ModalBox';\n\nclass VsComputer extends React.Component {\n\n\tstate = {\n\t\tcount: {\n\t\t\tp1: 2,\n\t\t\tp2: 2\n\t\t},\n\t\tplayMode: 1,\t\t// 0: P vs P, 1: P vs C,\n\t\tgameStatus: { \n\t\t\tisGameEnded: false,\n\t\t\twinner: null\n\t\t}\n\t}\n\n\tupdateCountState = (ct) => {\n\t\tthis.setState({\n\t\t\tcount: ct\n\t\t}, () => { \n\t\t\tthis.setState({\n\t\t\t\tgameStatus: { isGameEnded: this.state.count.p1 === 0 || this.state.count.p2 === 0 || this.state.count.p1 + this.state.count.p2 === 49,\n\t\t\t\twinner: this.state.count.p1 > this.state.count.p2 ? 1 : 2 }\n\t\t\t})\n\t\t})\n\t};\n\n    render(){\n        return (\n\t\t\t<div>\n\t\t\t\t<Container> \n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs=\"3\"><PlayerPane playerid={this.state.playMode === 0 ? 'Player1' : 'Player'} status={1} count={this.state.count.p1}/></Col>          \n\t\t\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t\t\t<MainPane updateCellCount={this.updateCountState} playmode={this.state.playMode} gameEnd={this.state.gameStatus.isGameEnded}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs=\"3\"><PlayerPane playerid={this.state.playMode === 0 ? 'Player2' : 'Computer'} status={2} count={this.state.count.p2}/></Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<ModalBox isOpen={this.state.gameStatus.isGameEnded} playmode={this.state.playMode} countP1={this.state.count.p1} countP2={this.state.count.p2}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n  \nexport default VsComputer;\n","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from 'reactstrap';\nimport './App.css';\nimport Menubar from './Menubar'\nimport VsPlayer from './VsPlayer';\nimport VsComputer from './VsComputer';\n// import AlerLine from './AlertLine';\n\nclass App extends React.Component {\n\n\t// state = {\n\t// \talertText: ''\n\t// }\n\n\t// updateAlertText = (line) => {\n\t// \tthis.setState({\n\t// \t\talertText: line\n\t// \t})\n\t// };\n\n    render(){\n\t\t// let alertBox = this.state.alertText !== '' ? \n\t\t// \t<Container style={{marginTop: '25px'}}> \n\t\t// \t\t<AlerLine textline={this.state.alertText}/>\n\t\t// \t</Container> : null;\n        return (\n\t\t\t<div>\n\t\t\t\t<Container style={{marginBottom: '25px'}}> \n\t\t\t\t\t<Menubar updatePlayMode={this.updatePlayModeState}/>\n\t\t\t\t</Container>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Route exact path=\"/\" component={VsPlayer} />\n\t\t\t\t\t\t<Route path=\"/vsplayer\" component={VsPlayer} />\n\t\t\t\t\t\t<Route path=\"/vscomputer\" component={VsComputer} />\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t\t{/* {alertBox} */}\n\t\t\t</div>\n\t\t)\n\t}\n}\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}