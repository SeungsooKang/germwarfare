{"version":3,"sources":["Profile.js","Menubar.js","Cell.js","GameModule.js","MainPane.js","PlayerPane.js","ModalBox.js","VsPlayer.js","VsComputer.js","App.js","serviceWorker.js","index.js"],"names":["Profile","react_default","a","createElement","Button","id","color","UncontrolledPopover","trigger","placement","target","PopoverHeader","PopoverBody","React","Component","Menubar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reloadVsPlayer","window","location","assign","reload","reloadVsComputer","toggle","bind","assertThisInitialized","state","isOpen","setState","Navbar","light","expand","NavbarBrand","href","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","onClick","Profile_Profile","playerColor","bgColor","Cell","boxStyle","width","height","padding","border","background","bgStatus","circleStyle","WebkitBorderRadius","MozBorderRadius","borderRadius","status","margin","style","clickedBlankCell","clickPos","mapData","currData","playerTurn","numCol","filter","data","row","length","x","y","infectNextCells","clearBgStatus","col","clickedBlueCell","markNextCells","oneNext","findOneNextCell","map","findIndex","e","numRow","twoNext","pos","nextCells","push","Math","min","max","findTwoNextCell","countCells","p1","p2","processGameData","clickedRedCell","md","pt","ct","playComputerTurn","cells","deepClone","simulationResult","cloneMapData","cell","count","diff","maxDiff","apply","rst","maxSimulationResult","randomIndex","floor","random","obj","JSON","parse","stringify","MainPane","mapSize","createPlayMap","isPlayed","createRow","dataRow","items","i","key","src_Cell","createMap","rows","onMainPaneClick","event","mainPanePos","document","getElementsByClassName","getBoundingClientRect","xPos","clientY","yPos","clientX","prevplayerTurn","gameEnd","processClickInput","mapDataArr","j","_this2","processInputPosition","_this3","updateCellCount","playmode","milliseconds","Promise","resolve","setTimeout","then","PlayerPane","playerid","Jumbotron","fontSize","ModalBox","modal","prevState","gameResult","countP1","countP2","Modal","ModalHeader","ModalBody","ModalFooter","VsPlayer","playMode","gameStatus","isGameEnded","winner","updateCountState","Container","Row","Col","xs","src_PlayerPane","src_MainPane","src_ModalBox","VsComputer","App","marginBottom","Menubar_Menubar","updatePlayMode","updatePlayModeState","react_router_dom","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07d82d83.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nexport default class Profile extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button id=\"Popover\" color=\"secondary\">\n         \t\t\tProfile\n      \t\t\t</Button>\n\t\t\t\t<UncontrolledPopover trigger=\"click\" placement=\"bottom\" target=\"Popover\">\n\t\t\t\t\t<PopoverHeader>John Kang</PopoverHeader>\n\t\t\t\t\t<PopoverBody>Email: seungsoo@sheridancollege.ca <br/> Program: Software Development</PopoverBody>\n\t\t\t\t</UncontrolledPopover>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\nimport Profile from './Profile';\n\nexport default class Menubar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.toggle = this.toggle.bind(this);\n\t\tthis.state = {\n\t\t\tisOpen: false\n\t\t};\n\t}\n\ttoggle() {\n\t\tthis.setState({\n\t\t\tisOpen: !this.state.isOpen\n\t\t});\n\t}\n\n\treloadVsPlayer = () => {\n\t\twindow.location.assign(\"./#/vsplayer\");\n\t\twindow.location.reload();\n\t}\n\n\treloadVsComputer = () => {\n\t\twindow.location.assign(\"./#/vscomputer\");\n\t\twindow.location.reload();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<div>\n\t\t\t<Navbar color=\"light\" light expand=\"md\">\n\t\t\t<NavbarBrand href=\"/germwarfare/\">GermWarfare</NavbarBrand>\n\t\t\t<Collapse isOpen={this.state.isOpen} navbar>\n\t\t\t\t<Nav className=\"ml-auto\" navbar>\n\t\t\t\t\t\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<NavLink href=\"https://github.com/SeungsooKang/germwarfare\" target=\"_blank\">GitHub</NavLink>\n\t\t\t\t\t</NavItem>\n\t\t\t\t\t<UncontrolledDropdown nav inNavbar>\n\t\t\t\t\t\t<DropdownToggle nav caret>\n\t\t\t\t\t\t\tOptions\n\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t<DropdownMenu right>\n\t\t\t\t\t\t<DropdownItem onClick={this.reloadVsPlayer}>\n\t\t\t\t\t\t\tP vs P\n\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t<DropdownItem onClick={this.reloadVsComputer}>\n\t\t\t\t\t\t\tP vs C\n\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t</UncontrolledDropdown>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<Profile/>\n\t\t\t\t\t</NavItem>\n\t\t\t\t</Nav>\n\t\t\t</Collapse>\n\t\t\t</Navbar>\n\t\t</div>\n\t\t);\n\t}\n}","import React from 'react'\n\nconst playerColor = ['white', 'red', 'blue'];\nconst bgColor = ['white', '#f4a688', '#fff2df', '#ffff99'];\n\nclass Cell extends React.Component {\n\n    render() {\n\n        var boxStyle = {\n            width: '60px',\n            height: '60px',\n            padding: '5%',\n            border: '1px solid #c8c3cc',\n            background: bgColor[this.props.bgStatus]\n        };\n    \n        var circleStyle = {\n            width: '50px',\n            height: '50px',\n            WebkitBorderRadius: '25px',\n            MozBorderRadius: '25px',\n            borderRadius: '25px',\n            background: playerColor[this.props.status],\n            margin: '0 auto'\n        };\n\n        return (\n            <div className='cell' style={boxStyle}>\n                { this.props.status !== 0 ? <div style={circleStyle}></div> : '' }\n            </div>\n        );\n    }\n}\n\nexport default Cell\n","function clickedBlankCell(clickPos, mapData, currData, playerTurn) {\n\tlet numCol = mapData.filter(data => data.row === 0).length;\n\tlet clickData = mapData[ clickPos.x * numCol + clickPos.y ];\n\n\tswitch(clickData.bgStatus) {\n\t\tcase 0:\n\t\t\t// No event\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tmapData[ clickPos.x * numCol + clickPos.y ].status = currData.status;\n\t\t\tinfectNextCells(clickPos, mapData, currData); \n\t\t\tplayerTurn = (playerTurn === 1) ? 2 : 1;\n\t\t\tclearBgStatus(mapData);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tmapData[ clickPos.x * numCol + clickPos.y ].status = currData.status;\n\t\t\tinfectNextCells(clickPos, mapData, currData); \n\t\t\tmapData[ currData.row * numCol + currData.col ].status = 0;\n\t\t\tplayerTurn = (playerTurn === 1) ? 2 : 1;\n\t\t\tclearBgStatus(mapData);\n\t\t\tbreak;\n\t\tdefault:\n\t}\n\treturn playerTurn;\n}\n\nfunction clickedRedCell(clickPos, mapData) {\n\tclearBgStatus(mapData);\n\treturn markNextCells(clickPos, mapData);\n}\n\nfunction clickedBlueCell(clickPos, mapData) {\n\tclearBgStatus(mapData);\n\treturn markNextCells(clickPos, mapData);\n}\n\nfunction infectNextCells(clickPos, mapData, currData) {\n\tlet numRow = mapData.filter(data => data.col === 0).length;\n\tlet numCol = mapData.filter(data => data.row === 0).length;\n\tlet oneNext = findOneNextCell(clickPos, numRow, numCol);\n\n\tmapData.map(function(data){\n\t\tif (oneNext.findIndex(e => ( e.x === data.row && e.y === data.col ))!== -1 && data.status !== 0) {\n\t\t\tdata.status = currData.status \n\t\t}\n\t\treturn data;\n\t});\n}\n\nfunction clearBgStatus(mapData){\n\tmapData.map(function(data){\n\t\tdata.bgStatus = 0;\n\t\treturn data;\n\t});\n}\n\nfunction markNextCells(clickPos, mapData) {\n\tlet numRow = mapData.filter(data => data.col === 0).length;\n\tlet numCol = mapData.filter(data => data.row === 0).length;\n\tlet oneNext = findOneNextCell(clickPos, numRow, numCol);\n\tlet twoNext = findTwoNextCell(clickPos, numRow, numCol);\n\n\tmapData.map(function(data){\n\t\tif (clickPos.x === data.row && clickPos.y === data.col) { data.bgStatus = 3 }\n\t\tif (twoNext.findIndex(e => ( e.x === data.row && e.y === data.col ))!== -1 && data.status === 0) { data.bgStatus = 2 }\n\t\tif (oneNext.findIndex(e => ( e.x === data.row && e.y === data.col ))!== -1 && data.status === 0) { data.bgStatus = 1 }\n\t\treturn data;\n\t});\n}\n\nfunction countCells(mapData) {\n\tlet c1 = mapData.filter(data => data.status === 1).length;\n\tlet c2 = mapData.filter(data => data.status === 2).length;\n\treturn { p1: c1, p2: c2};\n}\n\nexport default function processGameData(clickPos, mapData, currData, playerTurn) {\n\tlet numCol = mapData.filter(data => data.row === 0).length;\n\tlet clickData = mapData[ clickPos.x * numCol + clickPos.y ];\n\n\tswitch(clickData.status) {\n\t\tcase 0:\n\t\t\tplayerTurn = clickedBlankCell(clickPos, mapData, currData, playerTurn);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tif (playerTurn === 1) clickedRedCell(clickPos, mapData);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (playerTurn === 2) clickedBlueCell(clickPos, mapData)\n\t  }\n\t\n\tlet count = countCells(mapData);\n\treturn { md: mapData, pt: playerTurn, ct: count };\n}\n\nexport function playComputerTurn(mapData, playerTurn) {\n\tlet cells = deepClone(mapData.filter(data => data.status === playerTurn));\n\tlet simulationResult = [];\n\t\n\tcells.map(function(data){\n\t\t// deep clone\n\t\tlet cloneMapData = deepClone(mapData);\n\t\tclickedBlueCell({ x: data.row, y: data.col }, cloneMapData)\n\t\tlet nextCells = deepClone(cloneMapData.filter(e => e.bgStatus === 1 || e.bgStatus === 2));\n\t\tif(nextCells){\n\t\t\tnextCells.map(function(cell){\n\t\t\t\tcloneMapData = deepClone(mapData);\n\t\t\t\tclickedBlueCell({ x: data.row, y: data.col }, cloneMapData)\n\t\t\t\tclickedBlankCell({ x: cell.row, y: cell.col }, cloneMapData, data, playerTurn);\n\t\t\t\tlet count = countCells(cloneMapData);\n\t\t\t\tsimulationResult.push({ mapData: cloneMapData, ct: count, diff: count.p2 - count.p1});\n\t\t\t\treturn cell;\n\t\t\t})\n\t\t}\n\t\treturn data;\n\t});\n\n\tlet maxDiff = Math.max.apply(Math, simulationResult.map(function(rst) { return rst.diff; }));\n\tlet maxSimulationResult = simulationResult.filter(rst => rst.diff === maxDiff);\n\tlet randomIndex = getRandomInt(maxSimulationResult.length);\n\t\n\treturn { \n\t\tmd: maxSimulationResult ? maxSimulationResult[randomIndex].mapData : mapData, \n\t\tpt: (playerTurn === 1) ? 2 : 1, \n\t\tct: maxSimulationResult ? maxSimulationResult[randomIndex].ct : countCells(mapData)\n\t};\n}\n\nfunction findOneNextCell(pos, numRow, numCol){\n\tlet nextCells = [];\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y   , 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x   , 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x   , 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y   , 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\treturn nextCells;\n}\n\nfunction findTwoNextCell(pos, numRow, numCol){\n\tlet nextCells = [];\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y   , 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -2, 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x -1, 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x   , 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x   , 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +1, 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y -2, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y -1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y   , 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y +1, 0),numCol-1) });\n\tnextCells.push({ x: Math.min(Math.max(pos.x +2, 0),numRow-1) , y: Math.min(Math.max(pos.y +2, 0),numCol-1) });\n\treturn nextCells;\n}\n\nfunction deepClone(obj) {\n\treturn JSON.parse(JSON.stringify(obj));\n}\n\nfunction getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}","import React from 'react'\nimport Cell from './Cell'\nimport processGameData from './GameModule'\nimport { playComputerTurn } from './GameModule'\n\nconst sleep = (milliseconds) => {\n\treturn new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nclass MainPane extends React.Component {\n\n\tstate = {\n\t\tmapSize: { numRow: 7, numCol: 7 },\n\t\tmapData: this.createPlayMap(7, 7),\n\t\tplayerTurn: 1,\n\t\tcurrData: {},\n\t\tcount: {},\n\t\tisPlayed: false\n\t}\n\n\tcreatePlayMap(numRow, numCol) {\n\t\tvar mapDataArr = [];\n\t\tfor(var i=0;i<numRow;i++){\n\t\t\tfor(var j=0;j<numCol;j++){\n\t\t\t\tmapDataArr.push({\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: j,\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tbgStatus: 0\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// initial germs\n\t\tmapDataArr[0].status = 1;\n\t\tmapDataArr[numCol-1].status = 2;\n\t\tmapDataArr[numRow*numCol-numCol].status = 2;\n\t\tmapDataArr[numRow*numCol-1].status = 1;\n\n\t\treturn mapDataArr;\n\t} \n\n\tcreateRow = (numRow, numCol) => {\n\t\tvar dataRow = (this.state.mapData).filter(data => data.row === numRow);\n\t\tvar items = [];\n\t\tfor (var i = 0; i < numCol; i++) {\n\t\t\titems.push(<td key={i}><Cell status={dataRow[i].status} bgStatus={dataRow[i].bgStatus} /></td>);\n\t\t}\n\t\treturn <tr key={numRow}>{items}</tr>;\n\t}\n\t\n\tcreateMap = (numRow, numCol) => {\n\t\tvar rows = [];\n\t\tfor (var i = 0; i < numRow; i++) {\n\t\t\trows.push(this.createRow(i, numCol));\n\t\t}\n\t\treturn \t<table className='mainpane' onClick={this.onMainPaneClick} style={{margin: '0 auto'}}>\n\t\t\t\t\t<tbody>{rows}</tbody>\n\t\t\t\t</table>\n\t}\n\n\tonMainPaneClick = (event) => {\n\t\tlet mainPanePos = document.getElementsByClassName('mainpane')[0].getBoundingClientRect();\n        let xPos = Math.floor((event.clientY-mainPanePos.y)/(mainPanePos.height/this.state.mapSize.numRow));\n\t\tlet yPos = Math.floor((event.clientX-mainPanePos.x)/(mainPanePos.width/this.state.mapSize.numCol));\n\t\tlet prevplayerTurn = this.state.playerTurn;\n\t\tif (!this.props.gameEnd) this.processClickInput(xPos, yPos, prevplayerTurn);\n\t}\n\n\tprocessClickInput (xPos, yPos, prevplayerTurn) {\n\t\tif (this.state.mapData[xPos*this.state.mapSize.numCol+yPos].status === this.state.playerTurn) {\n\t\t\tthis.setState({\n\t\t\t\tcurrData: this.state.mapData[xPos*this.state.mapSize.numCol+yPos] \n\t\t\t}, () => {\n\t\t\t\tthis.processInputPosition(xPos, yPos, prevplayerTurn);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.processInputPosition(xPos, yPos, prevplayerTurn);\n\t\t}\n\t}\n\n\tprocessInputPosition(xPos, yPos, prevplayerTurn) {\n\t\tlet rst = processGameData({ x: xPos, y: yPos }, this.state.mapData, this.state.currData, this.state.playerTurn);\n\t\tthis.setState({\n\t\t\tmapData: rst.md,\n\t\t\tplayerTurn: rst.pt,\n\t\t\tcount: rst.ct,\n\t\t\tisPlayed: prevplayerTurn !== rst.pt\n\t\t}, () => {\n\t\t\tthis.props.updateCellCount(this.state.count);\n\t\t\tif (this.props.playmode === 1 && this.state.isPlayed && this.state.playerTurn === 2 && this.state.count.p2 !== 0) {\n\t\t\t\tlet rst = playComputerTurn(this.state.mapData, this.state.playerTurn);\n\t\t\t\tsleep(500).then(() => { \n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmapData: rst.md,\n\t\t\t\t\t\tplayerTurn: rst.pt,\n\t\t\t\t\t\tcount: rst.ct,\n\t\t\t\t\t\tisPlayed: prevplayerTurn !== rst.pt\n\t\t\t\t\t}, () => { this.props.updateCellCount(this.state.count) });\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n    render() {\n        return <div>\n\t\t{this.createMap(this.state.mapSize.numRow,this.state.mapSize.numCol)}\n\t\t</div>\n    }\n}\n\nexport default MainPane\n","import React from 'react'\nimport { Jumbotron } from 'reactstrap';\n\nclass PlayerPane extends React.Component {\n\n    render() {\n\t\tvar style = {\n            border: '1px solid #c8c3cc'\n\t\t};\n\n\t\tvar circleStyle = {\n            width: '50px',\n            height: '50px',\n            WebkitBorderRadius: '25px',\n            MozBorderRadius: '25px',\n            borderRadius: '25px',\n            background: this.props.status === 1 ? 'red' : 'blue',\n            margin: '0 auto'\n        };\n\t\t\n        return <div className=\"w-100 h-100\" style={style}>\n\t\t\t<div className=\"h-50 d-flex justify-content-center align-items-center\">\n\t\t\t\t<h1>{this.props.playerid}<div style={circleStyle}></div></h1>\n\t\t\t</div>\n\t\t\t<div className=\"h-50\">\n\t\t\t\t<Jumbotron className=\"h-100 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t<p style={{fontSize:'90px'}}>{this.props.count}</p>\n\t\t\t\t</Jumbotron>\n\t\t\t</div>\n\t\t</div>\n    }\n}\n\nexport default PlayerPane\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalBox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\tmodal: false\n\t\t};\n\n\t\tthis.toggle = this.toggle.bind(this);\n\t}\n\n\ttoggle() {\n\t\tthis.setState(prevState => ({\n\t\tmodal: !prevState.modal\n\t\t}));\n\t}\n\n\treloadVsPlayer = () => {\n\t\twindow.location.assign(\"./#/vsplayer\");\n\t\twindow.location.reload();\n\t}\n\n\treloadVsComputer = () => {\n\t\twindow.location.assign(\"./#/vscomputer\");\n\t\twindow.location.reload();\n\t}\n\n\trender() {\n\t\tlet gameResult = this.props.playmode === 0 ? \t\n\t\t\t\t<div>\n\t\t\t\t\t<p>Player1: {this.props.countP1}</p>\n\t\t\t\t\t<p>Player2: {this.props.countP2}</p>\n\t\t\t\t</div> :\n\t\t\t\t<div>\n\t\t\t\t\t<p>Player: {this.props.countP1}</p>\n\t\t\t\t\t<p>Computer: {this.props.countP2}</p>\n\t\t\t\t</div>\n\t\treturn (\n\t\t<div>\n\t\t\t<Modal isOpen={this.props.isOpen} toggle={this.toggle} className={this.props.className}>\n\t\t\t\t<ModalHeader>\n\t\t\t\t\t{ this.props.playmode === 0 ? \n\t\t\t\t\t\tthis.props.countP1 > this.props.countP2 ? 'Player1 won!' : 'Player2 won!' :\n\t\t\t\t\t\tthis.props.countP1 > this.props.countP2 ? 'Player won!'  : 'Computer won!' \n\t\t\t\t\t}\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t{gameResult}\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t{ this.props.playmode === 0 ? \n\t\t\t\t\t\t<Button color=\"primary\" onClick={this.reloadVsPlayer}>Ok</Button> :\n\t\t\t\t\t\t<Button color=\"primary\" onClick={this.reloadVsComputer}>Ok</Button>\n\t\t\t\t\t}\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ModalBox;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport MainPane from './MainPane'\nimport PlayerPane from './PlayerPane';\nimport ModalBox from './ModalBox';\n\nclass VsPlayer extends React.Component {\n\n\tstate = {\n\t\tcount: {\n\t\t\tp1: 2,\n\t\t\tp2: 2\n\t\t},\n\t\tplayMode: 0,\t\t// 0: P vs P, 1: P vs C,\n\t\tgameStatus: { \n\t\t\tisGameEnded: false,\n\t\t\twinner: null\n\t\t}\n\t}\n\n\tupdateCountState = (ct) => {\n\t\tthis.setState({\n\t\t\tcount: ct\n\t\t}, () => { \n\t\t\tthis.setState({\n\t\t\t\tgameStatus: { isGameEnded: this.state.count.p1 === 0 || this.state.count.p2 === 0 || this.state.count.p1 + this.state.count.p2 === 49,\n\t\t\t\twinner: this.state.count.p1 > this.state.count.p2 ? 1 : 2 }\n\t\t\t})\n\t\t})\n\t};\n\n    render(){\n        return (\n\t\t\t<div>\n\t\t\t\t<Container> \n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs=\"3\">\n\t\t\t\t\t\t\t<PlayerPane playerid={this.state.playMode === 0 ? 'Player1' : 'Player'} \n\t\t\t\t\t\t\t\tstatus={1} count={this.state.count.p1}/>\n\t\t\t\t\t\t</Col>          \n\t\t\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t\t\t<MainPane updateCellCount={this.updateCountState} \n\t\t\t\t\t\t\t\tplaymode={this.state.playMode} \n\t\t\t\t\t\t\t\tgameEnd={this.state.gameStatus.isGameEnded}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs=\"3\">\n\t\t\t\t\t\t\t<PlayerPane playerid={this.state.playMode === 0 ? 'Player2' : 'Computer'} \n\t\t\t\t\t\t\t\tstatus={2} count={this.state.count.p2}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<ModalBox isOpen={this.state.gameStatus.isGameEnded} \n\t\t\t\t\tplaymode={this.state.playMode} \n\t\t\t\t\tcountP1={this.state.count.p1}\n\t\t\t\t\tcountP2={this.state.count.p2}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n  \nexport default VsPlayer;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport MainPane from './MainPane'\nimport PlayerPane from './PlayerPane';\nimport ModalBox from './ModalBox';\n\nclass VsComputer extends React.Component {\n\n\tstate = {\n\t\tcount: {\n\t\t\tp1: 2,\n\t\t\tp2: 2\n\t\t},\n\t\tplayMode: 1,\t\t// 0: P vs P, 1: P vs C,\n\t\tgameStatus: { \n\t\t\tisGameEnded: false,\n\t\t\twinner: null\n\t\t}\n\t}\n\n\tupdateCountState = (ct) => {\n\t\tthis.setState({\n\t\t\tcount: ct\n\t\t}, () => { \n\t\t\tthis.setState({\n\t\t\t\tgameStatus: { isGameEnded: this.state.count.p1 === 0 || this.state.count.p2 === 0 || this.state.count.p1 + this.state.count.p2 === 49,\n\t\t\t\twinner: this.state.count.p1 > this.state.count.p2 ? 1 : 2 }\n\t\t\t})\n\t\t})\n\t};\n\n    render(){\n        return (\n\t\t\t<div>\n\t\t\t\t<Container> \n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs=\"3\">\n\t\t\t\t\t\t\t<PlayerPane playerid={this.state.playMode === 0 ? 'Player1' : 'Player'} \n\t\t\t\t\t\t\t\tstatus={1} count={this.state.count.p1}/>\n\t\t\t\t\t\t</Col>          \n\t\t\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t\t\t<MainPane updateCellCount={this.updateCountState} \n\t\t\t\t\t\t\t\tplaymode={this.state.playMode} \n\t\t\t\t\t\t\t\tgameEnd={this.state.gameStatus.isGameEnded}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs=\"3\">\n\t\t\t\t\t\t\t<PlayerPane playerid={this.state.playMode === 0 ? 'Player2' : 'Computer'} \n\t\t\t\t\t\t\t\tstatus={2} count={this.state.count.p2}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<ModalBox isOpen={this.state.gameStatus.isGameEnded} \n\t\t\t\t\tplaymode={this.state.playMode} \n\t\t\t\t\tcountP1={this.state.count.p1} \n\t\t\t\t\tcountP2={this.state.count.p2}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n  \nexport default VsComputer;\n","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from 'reactstrap';\nimport './App.css';\nimport Menubar from './Menubar'\nimport VsPlayer from './VsPlayer';\nimport VsComputer from './VsComputer';\n// import AlerLine from './AlertLine';\n\nclass App extends React.Component {\n\n\t// state = {\n\t// \talertText: ''\n\t// }\n\n\t// updateAlertText = (line) => {\n\t// \tthis.setState({\n\t// \t\talertText: line\n\t// \t})\n\t// };\n\n    render(){\n\t\t// let alertBox = this.state.alertText !== '' ? \n\t\t// \t<Container style={{marginTop: '25px'}}> \n\t\t// \t\t<AlerLine textline={this.state.alertText}/>\n\t\t// \t</Container> : null;\n        return (\n\t\t\t<div>\n\t\t\t\t<Container style={{marginBottom: '25px'}}> \n\t\t\t\t\t<Menubar updatePlayMode={this.updatePlayModeState}/>\n\t\t\t\t</Container>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Route exact path=\"/\" component={VsPlayer} />\n\t\t\t\t\t\t<Route path=\"/vsplayer\" component={VsPlayer} />\n\t\t\t\t\t\t<Route path=\"/vscomputer\" component={VsComputer} />\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t\t{/* {alertBox} */}\n\t\t\t</div>\n\t\t)\n\t}\n}\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}